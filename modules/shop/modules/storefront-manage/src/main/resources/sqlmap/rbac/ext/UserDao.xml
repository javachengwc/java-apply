<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.storefront.manage.dao.rbac.UserDao">

    <resultMap id="UserMap" type="com.storefront.manage.model.vo.UserVo" >
        <result column="id" property="id" jdbcType="BIGINT" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="mobile" property="mobile" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="create_time" property="createTimeStr" jdbcType="VARCHAR" />
        <result column="modified_time" property="modifiedTimeStr" jdbcType="VARCHAR" />
        <result column="role_names" property="roleNames" jdbcType="VARCHAR" />
    </resultMap>

    <select id="queryPage" parameterType="com.storefront.manage.model.vo.UserQueryVo" resultMap="UserMap">
        select u.id, u.name,u.mobile,u.status,
            date_format(u.create_time,'%Y-%m-%d %H:%i:%s') as create_time,
            date_format(u.modified_time,'%Y-%m-%d %H:%i:%s') as modified_time,
            group_concat(r.name) as role_names
        from user u
        left join user_role ur on ur.user_id = u.id
        left join role r on r.id = ur.role_id
        <where>
            <if test="name != null and name != ''">
                u.name like concat(#{name}, '%')
            </if>
            <if test="mobile != null and mobile != ''">
                and u.mobile = #{mobile}
            </if>
            <if test="status != null and status >=0 ">
                and u.status = #{status}
            </if>
            <if test="roleId != null">
                and ur.role_id = #{roleId}
            </if>
            <if test="beginDate != null and beginDate != '' ">
                and u.create_time &gt;= #{beginDate}
            </if>
            <if test="endDate != null and endDate != '' ">
                and u.create_time &lt; #{endDate}
            </if>
        </where>
        group by u.id
        order by u.id desc
    </select>

    <select id="queryUserPerms" parameterType="long" resultType="string">
        select m.perms
        from  menu m
        join  role_menu rm on rm.menu_id = m.id
        join user_role ar on ar.role_id = rm.role_id
        where ar.user_id = #{userId}
    </select>

</mapper>