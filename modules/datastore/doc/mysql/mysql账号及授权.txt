--------------------mysql账号-----------------------
注:mysql5.7及以上版本mysql数据库的user表中的password字段已经变成了authentication_string字段

-----创建用户
CREATE USER 'username'@'host' IDENTIFIED BY 'password';

例子: CREATE USER 'dog'@'localhost' IDENTIFIED BY '123456';

      CREATE USER 'pig'@'192.168.1.101_' IDENTIFIED BY '123456';

      CREATE USER 'pig'@'%' IDENTIFIED BY '123456';

      CREATE USER 'pig'@'%' IDENTIFIED BY '';

      CREATE USER 'pig'@'%';

-----查看用户
select user,host,password from user where user='%s';

-----显示当前用户
SELECT USER();

-----修改账号密码
alter user rootroot@'%' IDENTIFIED BY 'rootroot';

-----忘记root密码的措施(重置root密码)

1.先杀掉mysqld的进程
kill -TERM mysqld

2.使用skip-grant-tables这个选项启动MySQL
mysqld_safe --skip-grant-tables

3.登录修改密码
mysql -u root -p
mysql>use mysql;
mysql>update user set password=password('123456') where user='root';
mysql>flush privileges;

4.关掉MySQL
mysqladmin -u root -p shutdown

5.启动MySQL
mysqld_safe --user=mysql &

--------------------mysql授权-----------------------

mysql中可以给你一个用户授予如select,insert,update,delete等其中的一个或者多个权限,主要使用grant命令,用法格式为：
grant 权限 on 数据库 to 用户

一、grant 普通数据用户，查询、插入、更新、删除 数据库中所有表数据的权利。

grant select on testdb.* to common_user@'%'
grant insert on testdb.* to common_user@'%'
grant update on testdb.* to common_user@'%'
grant delete on testdb.* to common_user@'%'
或者，用一条 MySQL 命令来替代：
grant select, insert, update, delete on testdb.* to common_user@'%'

二、grant 数据库开发人员，创建表、索引、视图、存储过程、函数。。。等权限。

grant 创建、修改、删除 MySQL 数据表结构权限。
grant create on testdb.* to developer@'192.168.0.%';
grant alter on testdb.* to developer@'192.168.0.%';
grant drop on testdb.* to developer@'192.168.0.%';

grant 操作 MySQL 外键权限。
grant references on testdb.* to developer@'192.168.0.%';

grant 操作 MySQL 临时表权限。
grant create temporary tables on testdb.* to developer@'192.168.0.%';

grant 操作 MySQL 索引权限。
grant index on testdb.* to developer@'192.168.0.%';

grant 操作 MySQL 视图、查看视图源代码 权限。
grant create view on testdb.* to developer@'192.168.0.%';
grant show view on testdb.* to developer@'192.168.0.%';

grant 操作 MySQL 存储过程、函数 权限。
grant create routine on testdb.* to developer@'192.168.0.%'; -- now, can show procedure status
grant alter routine on testdb.* to developer@'192.168.0.%'; -- now, you can drop a procedure
grant execute on testdb.* to developer@'192.168.0.%';

三、grant 普通 DBA 管理某个 MySQL 数据库的权限。

grant all privileges on testdb.* to dba@'localhost'
其中，关键字 “privileges” 可以省略。

四、grant 高级 DBA 管理 MySQL 中所有数据库的权限。

grant all on *.* to dba@'localhost'

五、MySQL grant 权限，分别可以作用在多个层次上。

1. grant 作用在整个 MySQL 服务器上：
grant select on *.* to dba@localhost; -- dba 可以查询 MySQL 中所有数据库中的表。
grant all on *.* to dba@localhost; -- dba 可以管理 MySQL 中的所有数据库

2. grant 作用在单个数据库上：
grant select on testdb.* to dba@localhost; -- dba 可以查询 testdb 中的表。

3. grant 作用在单个数据表上：
grant select, insert, update, delete on testdb.orders to dba@localhost;

4. grant 作用在表中的列上：
grant select(id, se, rank) on testdb.apache_log to dba@localhost;

5. grant 作用在存储过程、函数上：
grant execute on procedure testdb.pr_add to 'dba'@'localhost'
grant execute on function testdb.fn_add to 'dba'@'localhost'

六、查看 MySQL 用户权限

---查看当前用户（自己）权限：
show grants;

---查看其他 MySQL 用户权限：
show grants for dba@localhost;

七、撤销已经赋予给 MySQL 用户权限的权限。

revoke 跟 grant 的语法差不多，只需要把关键字 “to” 换成 “from” 即可：
grant all on *.* to dba@localhost;
revoke all on *.* from dba@localhost;

八、MySQL grant、revoke 用户权限注意事项

1. grant, revoke 用户权限后，该用户只有重新连接 MySQL 数据库，权限才能生效。
2. 如果想让授权的用户，也可以将这些权限 grant 给其他用户，需要选项 “grant option“
grant select on testdb.* to dba@localhost with grant option;

--------------------------------------------------------------------------------