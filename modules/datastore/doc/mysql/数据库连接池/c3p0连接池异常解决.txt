-----------------------------------c3p0异常解决----------------------------
异常:An attempt by a client to checkout a Connection has timed out
分析:从连接池获取连接超时，连接池中连接不够用
解决方式:增大连接池，增大获取连接超时时间，减少缓存statment的连接数为0。
(如果对数据库的访问，获取连接跟关闭连接是自己写的程序来执行的，可能是关闭连接的代码部分有问题，
在某系情况下未必真正关闭连接。)
配置优化如:
优化前                            优化后
c3p0.maxPoolSize=100              c3p0.maxPoolSize=200
c3p0.maxStatements=100            c3p0.maxStatements=0
c3p0.checkoutTimeout=10000        c3p0.checkoutTimeout=20000

----------------------------
异常:Communications link failure com.mysql.jdbc.exceptions.jdbc4.CommunicationsException:
     Communications link failure Last packet sent to the server was 0 ms ago
分析:连接池中连接发包为0,程序中认为连接可用，但数据库里面可能已经把此连接关闭，才会出现程序用这样的连接发不了数据。
     mysql配置中有一项连接的等待时间(wait_timeout)缺省为8小时,show global variables like 'wait_timeout'; 在数据库中某连接的
     等待时间超过此设置，mysql就将该连接关闭。这时，如果应用的连接池仍有该连接并认为可用。当用该连接来进行数据库操作时，就抛此异常。
解决方式: 增大mysql的wait_timeout或则应用中在从连接池获取连接的时候检查其可用性
vim /etc/my.cnf,增改wait_timeout=1810000     ---修改mysql的wait_timeout
c3p0.testConnectionOnCheckout=true           #从连接池获取连接的时候检查此连接是否可用

-----------------------------------------------
异常:The server time zone value '???ú±ê×??±??' is unrecognized or represents more...
原因:使用了MySQL新版驱动
解决方式:
    1,在项目代码-数据库连接URL后，加上serverTimezone=UTC
    2,在mysql中设置时区，默认为SYSTEM,set global time_zone='+8:00'
-----------------------------------------------
c3p0连接池参考配置:
c3p0.acquireIncrement=3
c3p0.initialPoolSize=3
c3p0.minPoolSize=5
c3p0.maxPoolSize=200
c3p0.maxIdleTime=1800
c3p0.idleConnectionTestPeriod=1800
c3p0.maxStatements=0
c3p0.checkoutTimeout=10000
c3p0.acquireRetryAttempts=5   #连接池在获得新连接失败时重试的次数
c3p0.acquireRetryDelay=1000   #连接池在获得新连接失败时重试时两次连接间隔时间(毫秒)
c3p0.numHelperThreads=5       #c3p0是异步操作的，缓慢的JDBC操作通过帮助线程完成。
                              #扩展这些操作可以有效的提升性能 通过多线程实现多个操作同时被执行
c3p0.testConnectionOnCheckout=true
c3p0.preferredTestQuery=select 1

-----------------------------------------------