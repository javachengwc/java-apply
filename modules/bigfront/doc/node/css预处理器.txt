css预处理器包含Sass、Less、Stylus 等，
在使用前，需要先安装这些预处理器，装完成后，就可以在项目中使用相应的css预处理器。
比如，在 vue 项目中，可以使用 <style lang="scss"> 来编写 Sass 代码。
--------------------------------------------------------------
###css预处理器安装
npm install -D sass
npm install -D less
npm install -D stylus
--------------------------------------------------------------
scss（Syntactically Awesome Style Sheets）诞生于‌2007年‌，是sass（SassScript）的语法升级版本，
旨在提供更接近原生css的语法结构，同时保留Sass的编程特性‌。
scss作为css的超集，弥补了css在可维护性、复用性和编程能力上的不足，
尤其适合需要复杂样式管理和团队协作的场景，但需依赖编译工具。
scss与css的核心区别体现在语法扩展、功能特性和编译方式等方面
1，语法
css：采用扁平化的键值对语法，仅支持基本规则集‌。
scss：兼容css语法，同时支持嵌套、变量、混合器（Mixins）等类编程语法，代码结构更接近编程语言‌。

css：不支持原生变量定义，需通过css自定义属性（如--color: red）实现类似功能‌。
scss：支持通过$variable: value语法定义变量，便于全局复用颜色、尺寸等值‌。

css：选择器需独立书写，无法反映html层级关系‌。
scss：允许嵌套语法，例如.nav { ul { ... } }，减少重复代码并提升可读性‌。

2，功能扩展,
css：无混合器功能，需手动编写重复代码‌。
scss：通过@mixin定义可复用代码块，使用@include调用，例如生成浏览器前缀兼容代码‌。

css：继承依赖层叠特性，数值运算需依赖calc()函数‌。
scss：支持@extend继承其他选择器的样式，并可直接进行数值运算（如width: 100% - 20px）‌。

css‌：@import可能导致多个http请求，影响性能‌。
scss‌：@import在编译阶段合并文件为单一css，同时支持变量、混合器的跨文件复用‌。

3，编译与兼容性
css：浏览器直接解析，无需编译‌。
scss：需通过预处理器（如Sass）编译为css后才能被浏览器识别‌。

css：所有浏览器原生支持。
scss：完全兼容css语法，可直接在scss文件中编写原生css代码‌。

4，适用场景
css：适合小型项目或无需复杂样式的场景，学习成本低‌。
scss：适用于大型项目，通过变量、嵌套、混合器等提升代码维护性和开发效率‌。
-------------------------------------------------------------------------------