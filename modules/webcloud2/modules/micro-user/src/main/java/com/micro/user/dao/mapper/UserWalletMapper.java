package com.micro.user.dao.mapper;

import com.micro.user.model.pojo.UserWallet;
import com.micro.user.model.pojo.UserWalletExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;

public interface UserWalletMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_wallet
     *
     * @mbggenerated Thu May 30 17:19:48 CST 2019
     */
    int countByExample(UserWalletExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_wallet
     *
     * @mbggenerated Thu May 30 17:19:48 CST 2019
     */
    int deleteByExample(UserWalletExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_wallet
     *
     * @mbggenerated Thu May 30 17:19:48 CST 2019
     */
    @Delete({
        "delete from user_wallet",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_wallet
     *
     * @mbggenerated Thu May 30 17:19:48 CST 2019
     */
    @Insert({
        "insert into user_wallet (user_id, user_name, ",
        "user_mobile, amount, ",
        "freeze_amount, create_time, ",
        "modified_time)",
        "values (#{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, ",
        "#{userMobile,jdbcType=VARCHAR}, #{amount,jdbcType=BIGINT}, ",
        "#{freezeAmount,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{modifiedTime,jdbcType=TIMESTAMP})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insert(UserWallet record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_wallet
     *
     * @mbggenerated Thu May 30 17:19:48 CST 2019
     */
    int insertSelective(UserWallet record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_wallet
     *
     * @mbggenerated Thu May 30 17:19:48 CST 2019
     */
    List<UserWallet> selectByExample(UserWalletExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_wallet
     *
     * @mbggenerated Thu May 30 17:19:48 CST 2019
     */
    @Select({
        "select",
        "id, user_id, user_name, user_mobile, amount, freeze_amount, create_time, modified_time",
        "from user_wallet",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("BaseResultMap")
    UserWallet selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_wallet
     *
     * @mbggenerated Thu May 30 17:19:48 CST 2019
     */
    int updateByExampleSelective(@Param("record") UserWallet record, @Param("example") UserWalletExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_wallet
     *
     * @mbggenerated Thu May 30 17:19:48 CST 2019
     */
    int updateByExample(@Param("record") UserWallet record, @Param("example") UserWalletExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_wallet
     *
     * @mbggenerated Thu May 30 17:19:48 CST 2019
     */
    int updateByPrimaryKeySelective(UserWallet record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_wallet
     *
     * @mbggenerated Thu May 30 17:19:48 CST 2019
     */
    @Update({
        "update user_wallet",
        "set user_id = #{userId,jdbcType=BIGINT},",
          "user_name = #{userName,jdbcType=VARCHAR},",
          "user_mobile = #{userMobile,jdbcType=VARCHAR},",
          "amount = #{amount,jdbcType=BIGINT},",
          "freeze_amount = #{freezeAmount,jdbcType=BIGINT},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "modified_time = #{modifiedTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(UserWallet record);
}