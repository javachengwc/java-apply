----------------------------------------springcloud整合hmily---------------------------------------
springcloud整合分布式tcc事务组件hmily,
springcloud1.X版本的对应hmily版本l.X,springcloud2.X版本的对应hmily版本2.X,具体参考hmily源代码工程
整合步骤如下:

1,项目pom中加入依赖
<!-- tcc事务 -->
        <dependency>
            <groupId>org.dromara</groupId>
            <artifactId>hmily-spring-boot-starter-springcloud</artifactId>
            <version>2.0.0-RELEASE</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

2,各环境配置中增加相应事务配置
#tcc事务
org:
    dromara:
         hmily :
            serializer : kryo
            recoverDelayTime : 128
            retryMax : 30
            scheduledDelay : 128
            scheduledThreadMax :  10
            repositorySupport : db
            started: true
            hmilyDbConfig :
                 driverClassName  : com.mysql.jdbc.Driver
                 url :  jdbc:mysql://localhost:3306/hmily_tcc?autoReconnect=true&useUnicode=true&characterEncoding=utf8&useSSL=false
                 username : root
                 password : root

3,启动类中注解@SpringBootApplication(exclude = {MongoAutoConfiguration.class, MongoDataAutoConfiguration.class})

这里特别注意，springboot2.X项目中直接依赖hmily-spring-boot-starter-springcloud组件，需要使用2.0.0-RELEASE,
否则会报错，如果不是此版本，启动报错了，可将项目做如下调整:
pom依赖调整成
<dependency>
    <groupId>org.dromara</groupId>
    <artifactId>hmily-springcloud</artifactId>
</dependency>
然后在项目@Configuration的配置类中增加
@ImportResource({"classpath:applicationContext.xml"})
再在项目的resources下增加配置文件applicationContext.xml,它的内容见
micro-order\src\main\resources\applicationContext.xml

---------------------------------------------------------------------------------------------------