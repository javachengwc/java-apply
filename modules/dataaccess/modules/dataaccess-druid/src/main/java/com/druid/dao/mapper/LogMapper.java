package com.druid.dao.mapper;

import com.druid.model.pojo.Log;
import com.druid.model.pojo.LogExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;

public interface LogMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log
     *
     * @mbg.generated Thu Mar 16 09:49:22 CST 2023
     */
    long countByExample(LogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log
     *
     * @mbg.generated Thu Mar 16 09:49:22 CST 2023
     */
    int deleteByExample(LogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log
     *
     * @mbg.generated Thu Mar 16 09:49:22 CST 2023
     */
    @Delete({
        "delete from t_log",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log
     *
     * @mbg.generated Thu Mar 16 09:49:22 CST 2023
     */
    @Insert({
        "insert into t_log (biz, rela_key, ",
        "content, crete_time, ",
        "update_time)",
        "values (#{biz,jdbcType=VARCHAR}, #{relaKey,jdbcType=VARCHAR}, ",
        "#{content,jdbcType=VARCHAR}, #{creteTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(Log record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log
     *
     * @mbg.generated Thu Mar 16 09:49:22 CST 2023
     */
    int insertSelective(Log record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log
     *
     * @mbg.generated Thu Mar 16 09:49:22 CST 2023
     */
    List<Log> selectByExample(LogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log
     *
     * @mbg.generated Thu Mar 16 09:49:22 CST 2023
     */
    @Select({
        "select",
        "id, biz, rela_key, content, crete_time, update_time",
        "from t_log",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("com.druid.dao.mapper.LogMapper.BaseResultMap")
    Log selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log
     *
     * @mbg.generated Thu Mar 16 09:49:22 CST 2023
     */
    int updateByExampleSelective(@Param("record") Log record, @Param("example") LogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log
     *
     * @mbg.generated Thu Mar 16 09:49:22 CST 2023
     */
    int updateByExample(@Param("record") Log record, @Param("example") LogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log
     *
     * @mbg.generated Thu Mar 16 09:49:22 CST 2023
     */
    int updateByPrimaryKeySelective(Log record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log
     *
     * @mbg.generated Thu Mar 16 09:49:22 CST 2023
     */
    @Update({
        "update t_log",
        "set biz = #{biz,jdbcType=VARCHAR},",
          "rela_key = #{relaKey,jdbcType=VARCHAR},",
          "content = #{content,jdbcType=VARCHAR},",
          "crete_time = #{creteTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Log record);
}