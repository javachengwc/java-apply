package com.struct.array;

//数组采用一段连续的存储单元来存储数据
//数组插入快，是在数组尾部进行插入，获取到数组的最后一个索引下标，加1进行赋值就可以
//数组删除慢，除开尾部删除，在任意中间或者前面删除，后面的元素都要整体进行平移的，所以是比较慢的
//数组，随机查找快，数组尾部增删快，其余的操作效率都是很低的。
//对于指定下标的查找，时间复杂度为O(1)；
//通过给定值进行查找，需要遍历数组，逐一比对给定关键字和数组元素，时间复杂度为O(n)，
//对于有序数组，则可采用二分查找，插值查找，斐波那契查找等方式，可将查找复杂度提高为O(logn)；
//对于一般的插入删除操作，涉及到数组元素的移动，其平均复杂度也为O(n)
public class ArrayTest {

    public static void main(String [] args ) {
        int[] data = new int[10];
        for(int i=0;i<data.length;i++) {
            System.out.println("index["+i+"]= "+data[i]);
        }
    }

}
