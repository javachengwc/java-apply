<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
 <display-name>manage</display-name>
 <context-param>
  <param-name>contextConfigLocation</param-name>
  <param-value>classpath*:applicationContext.xml</param-value>
 </context-param>
 <context-param>
  <param-name>log4jConfigLocation</param-name>
  <param-value>classpath:/log4j.properties</param-value>
 </context-param>
 <context-param>
  <param-name>log4jRefreshInterval</param-name>
  <param-value>60000</param-value>
 </context-param>
 <filter>
  <filter-name>encodingFilter</filter-name>
  <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
  <init-param>
   <param-name>encoding</param-name>
   <param-value>UTF-8</param-value>
  </init-param>
  <init-param>
   <param-name>forceEncoding</param-name>
   <param-value>true</param-value>
  </init-param>
 </filter>
 <filter>
  <filter-name>securityFilter</filter-name>
  <filter-class>com.manage.web.filter.SecurityFilter</filter-class>
 </filter>
 <!-- 运用ibatis时 openSessionInview去掉 -->
 <!-- 
 <filter>
  <filter-name>hibernateOpenSessionInViewFilter</filter-name>
  <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
 </filter>
  <filter-mapping>
  <filter-name>hibernateOpenSessionInViewFilter</filter-name>
  <url-pattern>*.action</url-pattern>
  <dispatcher>REQUEST</dispatcher>
  <dispatcher>FORWARD</dispatcher>
 </filter-mapping>
  -->
 <filter>
  <filter-name>struts2CleanupFilter</filter-name>
  <filter-class>org.apache.struts2.dispatcher.ActionContextCleanUp</filter-class>
 </filter>
 <filter>
  <filter-name>struts2Filter</filter-name>
  <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
 </filter>
 <!-- FlashScope filter,在Flash中存储的数据,在下一次http请求中也可以继续引用,使用方法为Flash.current().error("存在错误"); -->

<!--
<filter>
	<filter-name>FlashFilter</filter-name>
	<filter-class>cn.org.rapid_framework.web.scope.FlashFilter</filter-class>
</filter>
-->

<!-- LoggerMDCFilter,存放在MDC中的数据，log4j可以直接引用并作为日志信息打印出来. -->
<filter>
	<filter-name>LoggerMDCFilter</filter-name>
	<filter-class>com.manage.web.filter.LoggerMDCFilter</filter-class>
</filter>
<!--
<filter-mapping>
	<filter-name>FlashFilter</filter-name>
	<url-pattern>/*</url-pattern>
</filter-mapping>
-->
<filter-mapping>
	<filter-name>LoggerMDCFilter</filter-name>
	<url-pattern>/*</url-pattern>
</filter-mapping>
 <filter-mapping>
  <filter-name>encodingFilter</filter-name>
  <url-pattern>/*</url-pattern>
 </filter-mapping>
 
 <filter-mapping>
  <filter-name>securityFilter</filter-name>
  <url-pattern>*.jsp</url-pattern>
 </filter-mapping>
 
 <filter-mapping>
  <filter-name>securityFilter</filter-name>
  <url-pattern>*.action</url-pattern>
 </filter-mapping>
 
 <filter-mapping>
  <filter-name>struts2CleanupFilter</filter-name>
  <url-pattern>*.action</url-pattern>
  <dispatcher>REQUEST</dispatcher>
  <dispatcher>FORWARD</dispatcher>
 </filter-mapping>
 <filter-mapping>
  <filter-name>struts2Filter</filter-name>
  <url-pattern>*.action</url-pattern>
  <dispatcher>REQUEST</dispatcher>
  <dispatcher>FORWARD</dispatcher>
 </filter-mapping>
 <listener>
  <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
 </listener>
 <listener>
  <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
 </listener>
<!-- 使Spring支持request与session的scope,如:<bean id="loginAction" class="com.foo.LoginAction" scope="request"/> -->
<listener>
  <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
</listener>

 <listener>
  <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
 </listener>
 <session-config>
  <session-timeout>30</session-timeout>
 </session-config>
 <welcome-file-list>
  <welcome-file>login.jsp</welcome-file>
 </welcome-file-list>
 <error-page>
  <exception-type>java.lang.Throwable</exception-type>
  <location>/commons/500.jsp</location>
 </error-page>
 <error-page>
  <error-code>500</error-code>
  <location>/commons/error.jsp</location>
 </error-page>
 <error-page>
  <error-code>404</error-code>
  <location>/commons/404.jsp</location>
 </error-page>
 <error-page>
  <error-code>403</error-code>
  <location>/commons/403.jsp</location>
 </error-page>

</web-app>
