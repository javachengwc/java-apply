nacos java sdk 通过 NacosClientProperties, 一个类似于 Spring Environment用来统一管理客户端的各种配置项。
NacosClientProperties统一管理Properties、命令行参数、环境变量和默认值。

每个NacosClientProperties对象配置隔离，除去全局性的配置互不影响。以应对多注册中心,多配置中心的场景。
NacosClientProperties中总共有4个取值源, 分别是: 用户自定义的properties、命令行参数、 环境变量和默认值,
其中命令行参数、 环境变量和默认值 这3个是全局共享的无法做到隔离, 那么只剩下用户自定义的properties对象是可以进行隔离的,
每个 NacosClientProperties 对象中包含不同的 Properties 对象, 通过这种方法做到配置互不影响。
注: 全局共享的配置: 命令行参数、 环境参数和默认值 一旦初始化完毕,后续使用无法更改,使用 setProperty 方法,也无法修改.
setProperty 只能修改NacosClientProperties 对象中包含的 Properties 对象中的值。

NacosClientProperties提供优先级搜索功能, 默认搜索顺序 properties -> 命令行参数 -> 环境参数 -> 默认值,
可通过调整优先级来调整搜索顺序, 默认是 properties 优先。

配置优先级设置（默认优先级是 properties）：
- (命令行参数)-Dnacos.env.first=PROPERTIES|JVM|ENV
- (环境变量)NACOS_ENV_FIRST=PROPERTIES|JVM|ENV
------------------------------------------------------------------
nacos java sdk配置参数列表
1，通用参数--初始化注册中心NamingService和配置中心ConfigServie时均生效的参数
参数名	                  PropertyKeyConst的Key	                     默认值
###nacos server的地址列表，多个地址通过英文逗号,分割，多个地址必须属于同一个Nacos Server集群
serverAddr	              SERVER_ADDR                                无
###Nacos Server OpenAPI 的 context path，对应Nacos Server 的server.servlet.context-path参数
contextPath	              CONTEXT_PATH                               nacos
###Nacos Server的地址获取接入点，Java SDK或通过该接入点查询Nacos Server的实际域名或IP地址
endpoint	              ENDPOINT	                                 无
###Nacos Server的地址获取接入点的端口
endpointPort	          ENDPOINT_PORT	                             8080
###Nacos Server的地址获取接入点的context path
endpointContextPath	      ENDPOINT_CONTEXT_PATH	                     nacos
###Nacos Server在接入点中的集群名
endPointClusterName	      ENDPOINT_CLUSTER_NAME	                     serverlist
###Nacos Server的地址获取接入点的请求参数，用于接入点服务扩展自定义逻辑，格式key=value
endpointQueryParams	      ENDPOINT_QUERY_PARAMS	                     无
###Nacos Server定期从地址获取接入点重新获取地址列表的间隔时间，单位为秒
endpointRefreshIntervalSeconds	ENDPOINT_REFRESH_INTERVAL_SECONDS	 30
###nacos客户端所归属的命名空间Id， 设置后该SDK只能访问该命名空间的资源（配置或服务）
namespace	              NAMESPACE	                                 无
###开启鉴权功能后，访问Nacos Server所使用的用户名
username	              USERNAME		                             无
###开启鉴权功能后，访问Nacos Server所使用的用户名对应的密码
password	              PASSWORD	                                 无
###使用阿里云RAM鉴权时需要使用的accessKey
accessKey	              ACCESS_KEY		                         无
###使用阿里云RAM鉴权时需要使用的secretKey
secretKey	              SECRET_KEY	                             无
###使用阿里云RAM鉴权时需要使用的ramRoleName
ramRoleName	              RAM_ROLE_NAME	                             无
###使用阿里云RAM鉴权时，需要使用的signatureRegionId
signatureRegionId	      SIGNATURE_REGION_ID		                 无
###启动Java SDK时，是否打印全量参数，包含自定义properties、JVM和环境变量，用于调试和问题排查。
logAllProperties	      LOG_ALL_PROPERTIES	                     false
###由于和服务实例的ClusterName名称相同，容易造成混淆，该参数已废弃，请使用endPointClusterName
clusterName	              CLUSTER_NAME	                             serverlist
###是否兼容通过clusterName的方式设置endPointClusterName
isAdaptClusterNameUsage	  IS_ADAPT_CLUSTER_NAME_USAGE	             false
###该nacos java sdk的名称，目前仅在访问endpoint时使用，由于使用率低且命名不合理，将废弃
serverName	              SERVER_NAME	                             无

2，配置中心相关参数
参数名	                  PropertyKeyConst的Key	                     默认值
###自动计算配置中心ConfigService进行配置监听时的最大线程池个数
clientWorkerMaxThreadCount	CLIENT_WORKER_MAX_THREAD_COUNT		     CPU个数
###指定配置中心ConfigService进行配置监听时的线程池个数，优先级高于clientWorkerMaxThreadCount
clientWorkerThreadCount	  CLIENT_WORKER_THREAD_COUNT		         Max(2, Min(clientWorkerMaxThreadCount, CPU个数))
###配置中心ConfigService进行配置监听时立刻对监听的配置进行和服务端的同步和通知，开启可能影响启动监听的速度
enableRemoteSyncConfig	  ENABLE_REMOTE_SYNC_CONFIG	                 false
###指定配置中心ConfigService发起rpc请求超时时间, 默认不启用
configRequestTimeout	  CONFIG_REQUEST_TIMEOUT	                 -1
###旧版本配置中心使用长轮询重试间隔时间，已废弃
configRetryTime	          CONFIG_RETRY_TIME		                     2000
###旧版本配置中心使用长轮询超时时间，已废弃
configLongPollTimeout	  CONFIG_LONG_POLL_TIMEOUT	                 30000
###旧版本配置中心使用的最大重试次数参数，已废弃
maxRetry	              MAX_RETRY	                                 3

3，注册中心相关参数
参数名	                  PropertyKeyConst的Key	                     默认值
###注册中心NamingService在启动时读取本地磁盘缓存来初始化数据
namingLoadCacheAtStart	  NAMING_LOAD_CACHE_AT_START	             false
###注册中心NamingService的本地磁盘缓存目录名拓展名，用于同一节点中区分多个NamingService实例
namingCacheRegistryDir	  NAMING_CACHE_REGISTRY_DIR	                 空字符串
###注册中心NamingService开启异步查询订阅服务的功能，作为数据推送链路异常时的兜底辅助
namingAsyncQuerySubscribeService	NAMING_ASYNC_QUERY_SUBSCRIBE_SERVICE	false
###自动计算注册中心NamingService异步查询订阅服务的最大线程个数
namingPollingMaxThreadCount	        NAMING_POLLING_MAX_THREAD_COUNT	        CPU个数
###指定注册中心NamingService异步查询订阅服务的线程个数，优先级高于namingPollingMaxThreadCount
namingPollingThreadCount	        NAMING_POLLING_THREAD_COUNT	            Max(2, Min(namingPollingMaxThreadCount, CPU个数))
###当初始化注册中心NamingService serverAddr仅有一个地址时，请求nacos server失败后的最大重试次数
namingRequestDomainMaxRetryCount	NAMING_REQUEST_DOMAIN_RETRY_COUNT	    3
###注册中心NamingService开启推空保护功能，当订阅服务时发现服务地址列表为0时，忽略此地址列表，从而避免不必要的网络请求和资源浪费‌
namingPushEmptyProtection	        NAMING_PUSH_EMPTY_PROTECTION	        false
###注册中心NamingService与nacos server链接断开后，间隔多长时间检查并进行redo操作
redoDelayTime	          REDO_DELAY_TIME	                                3000
###注册中心NamingService执行redo操作的线程数
redoDelayThreadCount	  REDO_DELAY_THREAD_COUNT		                    1
###注册中心NamingService发起rpc请求超时时间, 默认不启用
namingRequestTimeout	  NAMING_REQUEST_TIMEOUT	                        -1
###注册中心NamingService旧版本使用的，用于发送所注册服务实例心跳的线程数，已废弃
namingClientBeatThreadCount	        NAMING_CLIENT_BEAT_THREAD_COUNT	        无

4，连接相关参数--nacos java sdk连接nacos server时，可以设置一系列的参数，来提升针对网络抖动时的容错能力，
这部分配置暂时**只能通过JVM参数( -D)**进行设置
参数名	                                       默认值
###Nacos Server GRPC端口相对主端口的偏移量
nacos.server.grpc.port.offset	               1000
###Nacos Java SDK的GRPC连接的名字
nacos.remote.client.grpc.name	               null
###Nacos Java SDK的GRPC连接的Keep Alive
nacos.remote.client.grpc.connect.keep.alive    5000
###Nacos Java SDK的GRPC连接发起请求时的最大重试次数
nacos.remote.client.grpc.retry.times	       3
###Nacos Java SDK的GRPC连接发起请求时的请求超时时间
nacos.remote.client.grpc.timeout	           3000
###Nacos Java SDK的GRPC连接所使用的线程池的线程Keep Alive时间
nacos.remote.client.grpc.pool.alive	           10000
###Nacos Java SDK的GRPC连接所使用的线程池的核心线程数
nacos.remote.client.grpc.pool.core.size	       CPU个数*2
###Nacos Java SDK的GRPC连接所使用的线程池的最大大小
nacos.remote.client.grpc.pool.max.size	       CPU个数*8
###Nacos Java SDK的GRPC连接刚连接上服务端时，进行连接注册的超时时间
nacos.remote.client.grpc.server.check.timeout  3000
###Nacos Java SDK的GRPC连接的请求队列长度
nacos.remote.client.grpc.queue.size	           10000
###Nacos Java SDK的GRPC连接的健康检查重试次数，达到这个次数健康检查失败的连接会被客户端强制关闭，进行重连
nacos.remote.client.grpc.health.retry	       3
###Nacos Java SDK的GRPC连接的健康检查超时时间
nacos.remote.client.grpc.health.timeout	       3000
Nacos Java SDK的GRPC连接单次请求的Request的最大大小，单位byte
nacos.remote.client.grpc.maxinbound.message.size	              10M
###Nacos Java SDK的GRPC连接对应的TCP Channel的Keep Alive时间，此时间应该大于connect.keep.alive,单位毫秒
nacos.remote.client.grpc.channel.keep.alive	                      6 * 60 * 1000
###Nacos Java SDK的GRPC连接对应的TCP Channel的Keep Alive超时时间，单位毫秒
nacos.remote.client.grpc.channel.keep.alive.timeout	              20 * 1000
###Nacos Java SDK的GRPC连接对应的TLS握手超时时间
nacos.remote.client.grpc.channel.capability.negotiation.timeout	  5000

5，其他参数--nacos java sdk中有部分参数对运行时期的影响较小，且需要全局一致，
因此此类参数目前需要通过JVM参数（-D）或环境变量进行设置，一般使用时使用默认值即可，仅在遇到一些特殊场景时才需要设置。
参数名	                                        默认值
###每个ConfigService可监听的最大配置数
PER_TASK_CONFIG_SIZE	                        3000
###Nacos Java SDK的本地快照根目录，根目录下会创建naming和config两个目录用于存放订阅的服务和配置的缓存信息
JM.SNAPSHOT.PATH	                            ${user.home}
###Nacos Java SDK的日志输出目录，正常情况下Nacos Java SDK的日志会输出到该目录下，
###部分特殊的场景和版本，可能会输出到业务日志中（如使用了log4j1.0的版本，或使用Spring Cloud重载了日志配置
JM.LOG.PATH	                                    ${user.home}/logs
###默认的Nacos Server配置中心和鉴权login的端口，当传入的serverAddr参数中不带有端口号时，使用此设置的端口连接Nacos Server，
nacos.server.port	                            8848
###默认的Nacos Server注册中心的端口，当传入的serverAddr参数中不带有端口号时，使用此设置的端口连接Nacos Server
nacos.naming.exposed.port	                    8848
###默认的Nacos Server contentPath，contextPath和endpointContextPath未传入时使用
nacos.client.contextPath		                nacos
###Nacos JAVA SDK的NacosClientProperties配置搜索顺序。优先级	PROPERTIES/JVM/ENV
nacos.env.first	                             	PROPERTIES
###Nacos JAVA SDK所归属的应用名，可在服务订阅者列表和配置订阅者列表中使用，仅作为参考字段使用
project.name	                                unknown
###连接服务时的连接超时时间，旧版本Http使用，已废弃
NACOS.CONNECT.TIMEOUT		                    1000
###连接服务时的读取超时时间，旧版本Http使用
NACOS.READ.TIMEOUT	                            3000
