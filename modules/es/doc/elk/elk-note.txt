---------------------------------------elk-note-------------------------------------
ELK是三个开源软件的缩写，分别表示：Elasticsearch , Logstash, Kibana。
目前新增了一个Beats，它是一个轻量级的日志收集处理工具(Agent)，Beats占用资源少，适合于在各个服务器上搜集日志后传输给Logstash，
由于原本的ELK Stack成员中加入了 Beats 工具所以已改名为Elastic Stack。

采用ELK在日志分析中的架构
架构方案A:
    logstash+es+kibana
    Logstash可分布于各个节点上搜集相关日志、数据，并经过分析、过滤后发送给远端服务器上的Elasticsearch进行存储。
    Elasticsearch将数据以分片的形式压缩存储并提供多种API供用户查询，操作。
    用户亦可以直观的通过配置Kibana Web方便的对日志查询，并根据数据生成报表。
    这是最简单的一种ELK架构方式。优点是搭建简单，易于上手。缺点是Logstash耗资源较大，运行占用CPU和内存高。另外没有消息队列缓存，存在数据丢失隐患。
架构方案B:
    logstash+kafka(redis)+es+kibana
    引入了消息队列机制，位于各个节点上的Logstash Agent先将数据/日志传递给Kafka（或者Redis），
    Kafka将队列中的消息或数据传递给服务端的Logstash，
    Logstash过滤、分析后将数据传递给Elasticsearch存储。
    最后由Kibana将日志和数据呈现给用户。
    引入了Kafka（或者Redis）,即使Logstash server因故障停止运行，数据将会先被存储下来，从而避免数据丢失。
架构方案C:
    beats+logstash+es+kibana
    将收集端logstash替换为beats，更灵活，消耗资源更少，扩展性更强。
    同时可配置Logstash 和Elasticsearch 集群用于支持大集群系统的运维日志数据监控和查询

------------------------------------------------------------------------------------