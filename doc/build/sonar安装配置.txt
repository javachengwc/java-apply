--------------------------------------sonar安装配置----------------------------------
sonar是一个用于代码质量管理的开放平台。通过插件机制，sonar 可以集成不同的测试工具，代码分析工具，以及持续集成工具,比如pmd-cpd、checkstyle、findbugs、Jenkins。
通过不同的插件对这些结果进行再加工处理，通过量化的方式度量代码质量的变化，从而可以方便地对不同规模和种类的工程进行代码质量管理。
sonar客户端可以采用IDE插件、Sonar-Scanner插件、Ant插件和Maven插件方式，并通过各种不同的分析机制对项目源代码进行分析和扫描，
并把分析扫描后的结果上传到sonar的数据库，通过sonar web界面对分析结果进行管理。
sonar可以从七个维度检测代码质量:
    1,复杂度分布(complexity):代码复杂度过高将难以理解
    2,重复代码(duplications):程序中包含大量复制、粘贴的代码而导致代码臃肿，sonar可以展示源码中重复严重的地方
    3,单元测试统计(unit tests):统计并展示单元测试覆盖率，开发或测试可以清楚测试代码的覆盖情况
    4,代码规则检查(coding rules):通过Findbugs,PMD,CheckStyle等检查代码是否符合规范
    5,注释率(comments):若代码注释过少，特别是人员变动后，其他人接手比较难接手；若过多，又不利于阅读
    6,潜在的Bug(potential bugs):通过Findbugs,PMD,CheckStyle等检测潜在的bug
    7,结构与设计(architecture & design):找出循环，展示包与包、类与类之间的依赖、检查程序之间耦合度

wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-6.7.6.zip         ###下载sonar
unzip sonarqube-6.7.6.zip
cp -rf sonarqube-6.7.6 /usr/local/
cd /usr/local/sonarqube-6.7.6
vim ./conf/sonar.properties
    sonar.jdbc.username=sonar
    sonar.jdbc.password=sonar
    sonar.jdbc.url=jdbc:mysql://127.0.0.1:3306/sonar?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true&useConfigs=maxPerformance&useSSL=false
    sonar.web.host=0.0.0.0
    sonar.web.port=9000
sonar的数据库驱动包默认已经提供了，除了oracle,如果需要添加oracle驱动包，将oracle驱动包复制到/usr/local/sonarqube-6.7.6/extensions/jdbc-driver/oracle目录下即可。

安装mysql(参见mysql安装)
mysql -uroot -p                                                                          ###连接mysql
mysql> create database sonar character set utf8 collate utf8_general_ci;                 ###创建数据库sonar
mysql> create user 'sonar'@'%';
mysql> grant all privileges on sonar.* to sonar@'%' identified by 'sonar';               ###给sonar授权
mysql> flush privileges;

sonar中文包:https://github.com/SonarQubeCommunity/sonar-l10n-zh,releases中找到对应版本的插件jar包
将插件放置在${SONARHOME}/extensions/plugins下，重启sonar后生效。
sonarqube-6.7.6对应的汉化包为sonar-l10n-zh-plugin-1.19.jar。

useradd sonar -s /sbin/nologin                                                           ###添加启动用户
chown -R sonar:sonar /usr/local/sonarqube-6.7.6                                          ###sonar目录拥有者变成启动用户
su sonar
/usr/local/sonarqube-6.7.6/bin/linux-x86-64/sonar.sh start                               ###切换到启动用户,启动sonar服务
/usr/local/sonarqube-6.7.6/bin/linux-x86-64/sonar.sh stop                                ###停止sonar服务
/usr/local/sonarqube-6.7.6/bin/linux-x86-64/sonar.sh restart                             ###重启sonar服务

启动后进程会自动关闭，查看日志会发现
Process exited with exit value [es]: 137
然后查看sonarde的es日志es.log，会发现
WARN  es[][o.e.b.BootstrapChecks] max file descriptors [65535] for elasticsearch process is too low, increase to at least [65536]
WARN  es[][o.e.b.BootstrapChecks] max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]
修改系统参数
sysctl -w vm.max_map_count=262144
sysctl -a|grep vm.max_map_count                  ###查询修改结果
vim /etc/sysctl.conf
    vm.max_map_count=262144                      ###永久修改配置
sysctl -p                                        ###使修改生效
vim /etc/security/limits.conf
    * soft nofile 65536
    * hard nofile 65536
ulimit -n 65536
ulimit -n                                        ###查看修改是否生效

http://127.0.0.1:9000                            ###访问sonar web服务
初始账号:admin  admin

-------------------------------------------------------------------------------------