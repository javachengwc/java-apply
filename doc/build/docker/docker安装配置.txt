------------------------------docker安装配置------------------------------
centos下安装docker:
系统要求:CentOS 7 3.10以上 64位系统.
Docker的旧版本被称为docker或docker-engine，如果已安装，需卸载。
$ sudo yum remove docker docker-common container-selinux docker-selinux docker-engine

$ uname -r
  3.10.0-229.el7.x86_64

$ yum update
  yum makecache fast
  yum search docker                      #搜索docker
  如果有直接安装
  yum install -y docker                  #安装docker

#如果没有，手动安装
$ vim /etc/yum.repos.d/docker.repo        #增加yum仓库
    [dockerrepo]
    name=Docker Repository
    baseurl=https://yum.dockerproject.org/repo/main/centos/7/
    enabled=1
    gpgcheck=1
    gpgkey=https://yum.dockerproject.org/gpg

service docker start 或
systemctl start docker
systemctl start docker.service            #启动docker
docker images                             #检测docker是否安装成功
docker run hello-world                    #运行hello-world这个自带的image来验证docker是否安装成功

systemctl status docker                   #查看状态
docker version                            #查看docker版本
docker info                               #查看docker信息
docker images                             #查看镜像列表
docker ps                                 #查看运行的镜像列表
docker search centos                      #搜索镜像文件
docker pull docker.io/centos              #拉取镜像文件
docker run -i -t docker.io/centos /bin/bash #运行镜像

docker images
REPOSITORY              TAG                 IMAGE ID            CREATED             SIZE
docker.io/centos        v2                  113322              10 seconds ago      300 MB
docker.io/centos        latest              123123              1 weeks ago         200 MB

docker rmi docker.io/centos:v22           #删除镜像文件
docker rm 87de3399a0ab                    #删除单个已经停止的容器
docker rm $(docker ps -a -q)              #删除所有已经停止的容器
docker run -it docker.io/centos:v2        #启动并进入容器
docker kill xxx                           #杀掉单个正在执行的容器
docker kill $(docker ps -q)               #杀掉所有正在执行的容器

#模拟创建镜像，启动镜像容器，停止容器
cd /home/docker/
mkdir -p discovery-eureka
cd discovery-eureka
cp /data/discovery-eureka-1.0-SNAPSHOT.jar .
vim Dockerfile
    FROM frolvlad/alpine-oraclejdk8:slim
    VOLUME /tmp
    ADD discovery-eureka-1.0-SNAPSHOT.jar app.jar
    RUN sh -c 'touch /app.jar'
    ENV JAVA_OPTS=""
    ENTRYPOINT [ "sh", "-c", "java $JAVA_OPTS -Djava.security.egd=file:/dev/./urandom -jar /app.jar" ]
docker build -t discovery-eureka .        #构建镜像discovery-eureka
docker run -p 8761:8761 -t -d discovery-eureka
                                          #启动discovery-eureka镜像容器
http://localhost:8761                     #访问服务
docker stop xxx                           #停止容器
-------------------------------------------------------------------------

-------------------------------------------------------------------------