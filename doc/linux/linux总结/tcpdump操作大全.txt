--------------------------------tcpdump操作大全---------------------------------
tcpdump，就是：dump the traffic on a network，根据使用者的定义对网络上的数据包进行截获的包分析工具。
tcpdump可以将网络中传送的数据包的“头”完全截获下来提供分析。它支持针对网络层、协议、主机、网络或端口的过滤，
并提供and、or、not等逻辑语句来去掉无用的信息。

tcpdump                                ---普通情况下，直接启动tcpdump将监视第一个网络接口eth0上所有流过的数据包。
tcpdump -i eth1                        ---监视指定网络接口的数据包
tcpdump -i eth0 host 192.168.0.2       ---在网口eth0上抓取主机地址为192.168.0.2的数据包
tcpdump -i eth0 net 192.168.0.0/24     ---在网口eth0上抓取网络地址为192.168.0.0/24的数据包
tcpdump -i eth0 port 80                ---在网口eth0上抓取端口为80的数据包(不区分是源端口还是目的端口)
tcpdump -i eth0 icmp                   ---在网口eth0上抓取所有icmp协议的数据包
tcpdump -i eth0 src port 80 and dst port 1100              ---在网口eth0上抓取源端口为80且目的端口为1100的数据包
tcpdump -i eth0 ether src or dst 00:11:22:6C:E2:A7         ---在网口eth0上抓取源mac地址或目的mac地址为00:21:85:6C:D9:A3的所有数据包
tcpdump ip host 192.168.0.2 and ! 192.168.0.3              ---获取主机192.168.0.2除了和主机192.168.0.3之外所有主机通信的ip包
tcpdump -i eth0 src host hostname                          ---获取主机hostname发送的所有数据
tcpdump -i eth0 dst host hostname                          ---监视所有送到主机hostname的数据包
tcpdump -i eth0 host ip -w /tmp/dump.out                   ---监控有ip交互的数据包，并保存到dump.out文件中
tcpdump -r dump.out > cc.out                               ---把dump下来的包转化成可查看的文件cc.out,通过查看cc.out查看抓包信息

tcpdump主要包括以下几种类型的关键字
1,关于类型的关键字，主要包括host，net，port
2,确定传输方向的关键字，主要包括src，dst，src or dst，src and dst，这些关键字指明了传输的方向
3,协议关键字，包括fddi，ip，arp，rarp，tcp，udp，imcp等
4,还有其他重要的关键字，如：gateway，broadcast，less，greater，
5,还有三种逻辑运算，取非运算是'not'、'!'，与运算符是'and'、'&&'、或运算符是'or'、'||'。

tcpdump选项
    -a：尝试将网络和广播地址转换成名称；
    -A：指定将每个监听到的数据包以ACSII可见字符打印
    -c<数据包数目>：收到指定的数据包数目后，就停止进抓包；
    -d：把编译过的数据包编码转换成可阅读的格式，并倾倒到标准输出；
    -dd：把编译过的数据包编码转换成C语言的格式，并倾倒到标准输出；
    -ddd：把编译过的数据包编码转换成十进制数字的格式，并倾倒到标准输出；
    -e：指定将监听到的数据包链路层的信息打印出来，包括源mac和目的mac，以及网络层的协议
    -f：用数字显示网际网络地址；
    -F<表达文件>：指定内含表达方式的文件；
    -i：指定tcpdump监听的网络接口
    -l：使用标准输出列的缓冲区；
    -n：指定将每个监听到数据包中的域名转换成IP地址后显示
    -nn：指定将每个监听到的数据包中的域名转换成IP、端口从应用名称转换成端口号后显示
    -N：不列出域名；
    -O：不将数据包编码最佳化；
    -p：将网卡设置为非混杂模式，不能与host或broadcast一起使用
    -q ：快速输出，仅列出少数的传输协议信息；
    -r<数据包文件>：从指定的文件读取数据包数据；
    -s<数据包大小>：设置每个数据包的大小；
    -S：指定打印每个监听到的数据包的TCP绝对序列号而非相对序列号
    -t：在每列倾倒资料上不显示时间戳记；
    -tt： 在每列倾倒资料上显示未经格式化的时间戳记；
    -T<数据包类型>：强制将表达方式所指定的数据包转译成设置的数据包类型；
    -v：详细显示指令执行过程；
    -vv：更详细显示指令执行过程；
    -x：用十六进制字码列出数据包资料；
    -w<数据包文件>：把数据包数据写入指定的文件。

tcpdump结果片段分析
09:32:57.671275 IP shfishdfisdhifhsiewereZ.60674 > 192.168.100.102.https: Flags [P.], seq 2877865144:2877865213, ack 1664585779, win 327, length 69
09:32:57.671314 IP shfishdfisdhifhsiewereZ.60674 > 192.168.100.102.https: Flags [F.], seq 69, ack 1, win 327, length 0
09:32:57.676641 IP shfishdfisdhifhsiewereZ.34030 > 192.168.100.102.https: Flags [S], seq 2803425103, win 29200, options [mss 1460,sackOK,TS val 2813526682 ecr 0,nop,wscale 7], length 0
09:32:57.718606 IP 192.168.100.102.https > shfishdfisdhifhsiewereZ.60674: Flags [R], seq 1664585779, win 0, length 0
09:32:57.718611 IP 192.168.100.102.https > shfishdfisdhifhsiewereZ.60674: Flags [R], seq 1664585779, win 0, length 0
09:32:57.719624 IP 192.168.100.102.https > shfishdfisdhifhsiewereZ.34030: Flags [S.], seq 1000785279, ack 2803425104, win 29200, options [mss 1456,nop,nop,sackOK,nop,wscale 7], length 0
09:32:57.719651 IP shfishdfisdhifhsiewereZ.34030 > 192.168.100.102.https: Flags [.], ack 1, win 229, length 0
09:32:57.720338 IP shfishdfisdhifhsiewereZ.34030 > 192.168.100.102.https: Flags [P.], seq 1:235, ack 1, win 229, length 234
09:32:57.755689 IP 192.168.100.102.https > shfishdfisdhifhsiewereZ.34030: Flags [.], ack 235, win 237, length 0
09:32:57.756760 IP 192.168.100.102.https > shfishdfisdhifhsiewereZ.34030: Flags [.], seq 1:1457, ack 235, win 237, length 1456
09:32:57.756779 IP shfishdfisdhifhsiewereZ.34030 > 192.168.100.102.https: Flags [.], ack 1457, win 251, length 0
09:32:57.758665 IP 192.168.100.102.https > shfishdfisdhifhsiewereZ.34030: Flags [P.], seq 1457:3137, ack 235, win 237, length 1680
09:32:57.758679 IP shfishdfisdhifhsiewereZ.34030 > 192.168.100.102.https: Flags [.], ack 3137, win 278, length 0
09:32:57.764906 IP shfishdfisdhifhsiewereZ.34030 > 192.168.100.102.https: Flags [P.], seq 235:310, ack 3137, win 278, length 75
09:32:57.767345 IP shfishdfisdhifhsiewereZ.34030 > 192.168.100.102.https: Flags [P.], seq 310:316, ack 3137, win 278, length 6
09:32:57.767486 IP shfishdfisdhifhsiewereZ.34030 > 192.168.100.102.https: Flags [P.], seq 316:401, ack 3137, win 278, length 85
09:32:57.803618 IP 192.168.100.102.https > shfishdfisdhifhsiewereZ.34030: Flags [.], ack 401, win 237, length 0
09:32:57.803642 IP 192.168.100.102.https > shfishdfisdhifhsiewereZ.34030: Flags [P.], seq 3137:3228, ack 401, win 237, length 91
09:32:57.805086 IP shfishdfisdhifhsiewereZ.34030 > 192.168.100.102.https: Flags [P.], seq 401:1542, ack 3228, win 278, length 1141
09:32:57.879630 IP 192.168.100.102.https > shfishdfisdhifhsiewereZ.34030: Flags [.], ack 1542, win 260, length 0
09:32:57.900641 IP 192.168.100.102.https > shfishdfisdhifhsiewereZ.34030: Flags [P.], seq 3228:3937, ack 1542, win 260, length 709
09:32:57.940586 IP shfishdfisdhifhsiewereZ.34030 > 192.168.100.102.https: Flags [.], ack 3937, win 300, length 0
09:33:58.382024 IP shfishdfisdhifhsiewereZ.34030 > 192.168.100.102.https: Flags [P.], seq 1542:2683, ack 3937, win 300, length 1141
09:33:58.416715 IP 192.168.100.102.https > shfishdfisdhifhsiewereZ.34030: Flags [.], ack 2683, win 283, length 0
09:33:58.458761 IP 192.168.100.102.https > shfishdfisdhifhsiewereZ.34030: Flags [P.], seq 3937:4646, ack 2683, win 283, length 709
09:33:58.458780 IP shfishdfisdhifhsiewereZ.34030 > 192.168.100.102.https: Flags [.], ack 4646, win 311, length 0
第1列是时间戳:时，分，秒，微妙
第2列是网际网路协议的名称
第3列是包发送方的十进制网际网路协议地址，以及紧跟其后的端口号(也可能是协议名如http,https,如果仍想显示端口号加-n 选项)
第4列是大于号
第5列是包接收方地址以及端口号
第6列是冒号
第7列是Flags标识，取值可能是[S][.][P.][F.]
[S]: SYN(开始连接)
[P]: PSH(推送数据)
[F]: FIN(结束连接)
[R]: RST(重置连接)
[.]: 可以用来表示ACK标志位1
第8,9,10列是tcp协议报文头的一些变量值
seq是请求同步的序列号,ack是已经同步的序列号,win是当前可用的窗口,length是tcp协议报文体的长度

--------------------------------------------------------------------------------